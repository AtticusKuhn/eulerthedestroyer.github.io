{"pageProps":{"rawText":"I built this site using Next.js, a frontend react framework for websites. This framework has a lot of nice aspects which caused me to choose it for this project.1. Server Side RenderingAlthough I did not use SSR on this website, as it is on github pages which only serves static content, I love the option of being able to use server-side 2. Static Site GenerationI used SSG on this site, as you can see by the github. I think it is a really cool feature. It&#39;s true I could have used hakyll or hugo or some other static site generator for this purpose, but since I already know react, next.js is the easiest option for me. Additionally, the idea of getStaticPaths/getStaticProps is an architectural choice which I really appreciate. 3. Works easilyWhen I run &quot;npx create-next-app&quot;, it simply works. There is no configuration that needs to be done in most cases. In fact, the only time I needed to touch the next.config.js was when I added preact, and even then it simply worked. I love that I do not have to tinker around or fiddle with the configuration or setup; that everything is already done and functions right away. 4. Picking rendering on a per-route basisIf I choose create-react-app, I must use client side rendering. If I choose Gatsby, I must use static site generation, but with next.js, I can choose whichever rendering strategy is best for each page. I am not constrained in any way when I use next.js, as it can mold to my project. That is why I feel free to use it on my projects, and know that I will not have to switch it out if I decide to switch to server-side rendering or switch to static generation. ","article":{"title":"Top 3 reasons I love next.js","id":"top-3-reasons-i-love-next.js","file":"<h1 class=\"c4\" id=\"h.d7cw1eh1on8y\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 585.60px; height: 246.67px;\"><img alt=\"Static site generation in Nextjs using getStaticProps() function - DEV  Community\" src=\"https://lh3.googleusercontent.com/rv18ZPIWd9eEvGR_SiIaZXBJR6deHQOQXeHjiF-5lYQpkCII80m6-VGCra2re2Hq5tg3KerXbGtsg03xDwN80rkOSSxHCcRFwlzgH2hG-9MjQ8JdFewLGtlPJoJknERicQ\" style=\"width: 585.60px; height: 246.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></h1><p class=\"c0 c2\"><span class=\"c3\"></span></p><p class=\"c0 c2\"><span class=\"c3\"></span></p><p class=\"c0\"><span class=\"c3\">I built this site using Next.js, a frontend react framework for websites. This framework has a lot of nice aspects which caused me to choose it for this project.</span></p><p class=\"c0 c2\"><span class=\"c3\"></span></p><h1 class=\"c4\" id=\"h.2d0ztfayvczt\"><span class=\"c1\">1. Server Side Rendering</span></h1><p class=\"c0\"><span class=\"c3\">Although I did not use SSR on this website, as it is on github pages which only serves static content, I love the option of being able to use server-side </span></p><h1 class=\"c4\" id=\"h.fimaeo6ddbwx\"><span class=\"c1\">2. Static Site Generation</span></h1><p class=\"c0\"><span>I used SSG on this site, as you can see by the </span><span class=\"c7\"><a class=\"c6\" href=\"https://www.google.com/url?q=https://github.com/eulerthedestroyer/eulerthedestroyer.github.io&amp;sa=D&amp;source=editors&amp;ust=1619982489953000&amp;usg=AOvVaw0KPsxRtrrJJer3rgc5x-Kc\">github</a></span><span>. I think it is a really cool feature. It&#39;s true I could have used hakyll or hugo or some other static site generator for this purpose, but since I already know react, next.js is the easiest option for me. Additionally, the idea of getStaticPaths/getStaticProps is an architectural choice which I really appreciate. </span></p><h1 class=\"c4\" id=\"h.60cm1kpszp3g\"><span class=\"c1\">3. Works easily</span></h1><p class=\"c0\"><span class=\"c3\">When I run &quot;npx create-next-app&quot;, it simply works. There is no configuration that needs to be done in most cases. In fact, the only time I needed to touch the next.config.js was when I added preact, and even then it simply worked. I love that I do not have to tinker around or fiddle with the configuration or setup; that everything is already done and functions right away. </span></p><h1 class=\"c4\" id=\"h.2m5n5m8ldg2d\"><span class=\"c1\">4. Picking rendering on a per-route basis</span></h1><p class=\"c0\"><span class=\"c3\">If I choose create-react-app, I must use client side rendering. If I choose Gatsby, I must use static site generation, but with next.js, I can choose whichever rendering strategy is best for each page. I am not constrained in any way when I use next.js, as it can mold to my project. That is why I feel free to use it on my projects, and know that I will not have to switch it out if I decide to switch to server-side rendering or switch to static generation. </span></p><p class=\"c0 c2\"><span class=\"c3\"></span></p><p class=\"c0 c2\"><span class=\"c3\"></span></p><p class=\"c0 c2\"><span class=\"c3\"></span></p>","style":"ol{margin:0;padding:0}table td,table th{padding:0}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c4{padding-top:20pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c1{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c7{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c5{background-color:#ffffff;max-width:439.2pt;padding:72pt 86.4pt 72pt 86.4pt}.c6{color:inherit;text-decoration:inherit}.c2{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}","images":["https://lh3.googleusercontent.com/rv18ZPIWd9eEvGR_SiIaZXBJR6deHQOQXeHjiF-5lYQpkCII80m6-VGCra2re2Hq5tg3KerXbGtsg03xDwN80rkOSSxHCcRFwlzgH2hG-9MjQ8JdFewLGtlPJoJknERicQ"],"date":"2021-04-14T15:09:00.570Z","description":"I built this site using Next.js, a..."},"length":2,"reccomendedArticles":[{"title":"My favourite Programming languages","id":"my-favourite-programming-languages","description":"With so many different programming languages and...","image":"https://lh5.googleusercontent.com/wjRFz0YBhe0izdpwfZe-2KNt1auP1jno9SPnORGgz0kP7SCGXcBaIhsxiyZ4jmoDK1s6Ig1ESVGUx33MBkJ01sIh7IRYaiypWJUloBmYgWpYKjHu4oAc-rEVZyYTja30ow"},{"title":"10 ways to map a list in haskell","id":"10-ways-to-map-a-list-in-haskell","description":"Since haskell is a list-based language, there...","image":"https://lh4.googleusercontent.com/sDaVhM-mh0ejojPHP8OfDTyslk3aVHCZWxkd8A5whmbZeIV-c3uP_tNXGcXKBA1-vJVtumfRF1rW8XvERl-cipvsUPEgsZFNwl_mcbUtAR-zBqajhsqUrlFj5WUj6TFHIA"},{"title":"How infinite sets could work in haskell","id":"how-infinite-sets-could-work-in-haskell","description":"I recently found out, very sadly, that...","image":"https://lh3.googleusercontent.com/l6wMZ9VJqFC50VgZrVa8_Avri7Hy9dcXzhLE_K9eADOh-R_ga3r7cBkeCaUtqeJFnNEVXe9JvZ0MfLK9iMgsLfQcwxKDMbTkMuJWHtsGowuOkTBO7TDS3vrzEphSjS-pPQ"}]},"__N_SSG":true}